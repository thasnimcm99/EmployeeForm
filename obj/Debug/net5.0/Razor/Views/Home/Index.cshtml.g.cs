#pragma checksum "C:\Users\bilal\Desktop\Mini Project\EmployeeForm\Views\Home\Index.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "b308480aa1ed83a2139618246c024995b2a8f3d3120e8a00dcad740e0bec3308"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\bilal\Desktop\Mini Project\EmployeeForm\Views\_ViewImports.cshtml"
using EmployeeForm;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\bilal\Desktop\Mini Project\EmployeeForm\Views\_ViewImports.cshtml"
using EmployeeForm.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"b308480aa1ed83a2139618246c024995b2a8f3d3120e8a00dcad740e0bec3308", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"69ca373f8e1c5b4dcea33cde95c77b61442d11b8fb0f8f83cd66efd28e1234a7", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\bilal\Desktop\Mini Project\EmployeeForm\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<p class=""container"">
    <button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#myModal"" onclick=""clearTextBox();"">
        Add New Employee
    </button><br /><br />
    <table class=""table table-bordered table-hover"" id=""employeeTable"" style=""background-color: #f4f4f9;"">
        <thead style=""background-color: #007bff; color: white;"">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Age</th>
                <th>State</th>
                <th>Country</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody class=""tbody"">
        </tbody>
    </table>
</p>

<!-- Modal for Add/Edit -->
<div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"" style=""background-color: #007bff; color: white;"">
             ");
            WriteLiteral("   <button type=\"button\" class=\"close\" data-dismiss=\"modal\">Ã—</button>\n                <h4 class=\"modal-title\" id=\"myModalLabel\">Add Employee</h4>\n            </div>\n            <div class=\"modal-body\">\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b308480aa1ed83a2139618246c024995b2a8f3d3120e8a00dcad740e0bec33084904", async() => {
                WriteLiteral(@"
                    <div class=""form-group"">
                        <label for=""EmployeeId"">ID</label>
                        <input type=""text"" class=""form-control"" id=""EmployeeID"" placeholder=""Id"" disabled=""disabled"" />
                    </div>
                    <div class=""form-group"">
                        <label for=""Name"">Name</label>
                        <input type=""text"" class=""form-control"" id=""Name"" placeholder=""Name"" />
                    </div>
                    <div class=""form-group"">
                        <label for=""Age"">Age</label>
                        <input type=""number"" class=""form-control"" id=""Age"" placeholder=""Age"" />
                    </div>
                    <div class=""form-group"">
                        <label for=""State"">State</label>
                        <input type=""text"" class=""form-control"" id=""State"" placeholder=""State"" />
                    </div>
                    <div class=""form-group"">
                        <label for=""Country"">Country</la");
                WriteLiteral("bel>\n                        <input type=\"text\" class=\"form-control\" id=\"Country\" placeholder=\"Country\" />\n                    </div>\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" id=""btnAdd"" onclick=""return Add();"">Add</button>
                <button type=""button"" class=""btn btn-primary"" id=""btnUpdate"" style=""display:none;"" onclick=""Update();"">Update</button>
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- jQuery -->
<script src=""https://code.jquery.com/jquery-3.6.0.min.js""></script>
<!-- DataTables CSS -->
<link href=""https://cdn.jsdelivr.net/npm/datatables.net-bs4@1.11.5/css/dataTables.bootstrap4.min.css"" rel=""stylesheet"">
<!-- DataTables JS -->
<script src=""https://cdn.jsdelivr.net/npm/datatables.net@1.11.5/js/jquery.dataTables.min.js""></script>
<script src=""https://cdn.jsdelivr.net/npm/datatables.net-bs4@1.11.5/js/dataTables.bootstrap4.min.js""></script>

<!-- SweetAlert2 -->
<link href=""https://cdn.jsdelivr.net/npm/sweetalert2@11.7.6/dist/sweetalert2.min.");
            WriteLiteral(@"css"" rel=""stylesheet"">
<script src=""https://cdn.jsdelivr.net/npm/sweetalert2@11.7.6/dist/sweetalert2.min.js""></script>

<!-- Font Awesome Icons -->
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"">

<script>
    $(document).ready(function () {
        loadData();
        $('#employeeTable').DataTable();
    });

    var baseUrl = ""https://localhost:44313/api/Employee/"";

    // Load Employee Data
    function loadData() {
        $.ajax({
            url: baseUrl,  // Corrected URL to match the controller's GET method
            type: ""GET"",
            contentType: ""application/json;charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                var html = '';
                $.each(result, function (key, item) {
                    html += '<tr>';
                    html += '<td>' + item.employeeID + '</td>';
                    html += '<td>' + item.name + '</td>';
                    html += '<td>' + item");
            WriteLiteral(@".age + '</td>';
                    html += '<td>' + item.state + '</td>';
                    html += '<td>' + item.country + '</td>';
                    html += '<td><a href=""#"" onclick=""return getbyID(' + item.employeeID + ')""><i class=""fas fa-edit""></i> Edit</a> | <a href=""#"" onclick=""Delete(' + item.employeeID + ')""><i class=""fas fa-trash-alt""></i> Delete</a></td>';
                    html += '</tr>';
                });
                $('.tbody').html(html);
                $('#employeeTable').DataTable().destroy();
                $('#employeeTable').DataTable();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    // Add Employee
    function Add() {
        // Get values from input fields
        var name = $('#Name').val();
        var age = $('#Age').val();
        var state = $('#State').val();
        var country = $('#Country').val();

        // Check if any of the fields are empty or null
        i");
            WriteLiteral(@"f (name === """" || age === """" || state === """" || country === """") {
            Swal.fire({
                icon: 'error',
                title: 'Validation Failed',
                text: 'All fields must be filled out!'
            });
            return;  // Prevent the request if validation fails
        }

        var empObj = {
            name: name,
            age: age,
            state: state,
            country: country
        };

        $.ajax({
            url: baseUrl,  // POST to /api/Employee
            data: JSON.stringify(empObj),
            type: ""POST"",
            contentType: ""application/json;charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                loadData();
                $('#myModal').modal('hide');
                Swal.fire({
                    icon: 'success',
                    title: 'Employee Added',
                    text: 'Employee added successfully!'
                });
                $("".modal-backdrop"").hide();
     ");
            WriteLiteral(@"       },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: errormessage.responseText
                });
            }
        });
    }

    // Get employee by ID for edit
    function getbyID(EmpID) {
        if (EmpID === undefined || EmpID === null) {
            alert(""Invalid Employee ID"");
            return;
        }
        $.ajax({
            url: baseUrl + EmpID,  // GET /api/Employee/{id}
            type: ""GET"",
            contentType: ""application/json;charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                $('#EmployeeID').val(result.employeeID);
                $('#Name').val(result.name);
                $('#Age').val(result.age);
                $('#State').val(result.state);
                $('#Country').val(result.country);
                $('#myModal').modal('show');
                $('#btnUpdate').show();
              ");
            WriteLiteral(@"  $('#btnAdd').hide();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
        return false;
    }

    // Update Employee Record
    function Update() {
        var empObj = {
            employeeID: $('#EmployeeID').val(),
            name: $('#Name').val(),
            age: $('#Age').val(),
            state: $('#State').val(),
            country: $('#Country').val()
        };
        $.ajax({
            url: baseUrl + empObj.employeeID,  // PUT /api/Employee/{id}
            data: JSON.stringify(empObj),
            type: ""PUT"",
            contentType: ""application/json;charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                loadData();
                $('#myModal').modal('hide');
                Swal.fire({
                    icon: 'success',
                    title: 'Employee Updated',
                    text: 'Employee details updated successfully!'
            ");
            WriteLiteral(@"    });
            },
            error: function (errormessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: errormessage.responseText
                });
            }
        });
    }

    // Delete Employee
    function Delete(ID) {
        var ans = confirm(""Are you sure you want to delete this Record?"");
        if (ans) {
            $.ajax({
                url: baseUrl + ID,  // DELETE /api/Employee/{id}
                type: ""DELETE"",
                contentType: ""application/json;charset=utf-8"",
                dataType: ""json"",
                success: function (result) {
                    loadData();
                    Swal.fire({
                        icon: 'success',
                        title: 'Employee Deleted',
                        text: 'Employee deleted successfully!'
                    });
                },
                error: function (errormessage) {
                    Swal.fire({
      ");
            WriteLiteral(@"                  icon: 'error',
                        title: 'Error',
                        text: errormessage.responseText
                    });
                }
            });
        }
    }

    // Clear input fields
    function clearTextBox() {
        $('#EmployeeID').val('');
        $('#Name').val('');
        $('#Age').val('');
        $('#State').val('');
        $('#Country').val('');
        $('#btnUpdate').hide();
        $('#btnAdd').show();
    }
</script>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
